// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  // default fields
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  login    String  @unique
  name     String?
  password String

  profile Profile?
  boards  Board[]

  @@map("user")
}

model Profile {
  // default fields
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @db.ObjectId

  @@map("profile")
}

model Board {
  // default fields
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  title       String
  description String       @default("")
  icon        String?
  status      EntityStatus @default(ACTIVE)

  tasks   Task[]
  columns Column[]
  user    User     @relation(fields: [userId], references: [id])
  userId  String   @db.ObjectId

  @@map("board")
}

model Column {
  // default fields
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  title String
  order Int    @default(0)

  board   Board  @relation(fields: [boardId], references: [id])
  boardId String @db.ObjectId
  tasks   Task[]

  @@map("column")
}

model Task {
  // default fields
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  title       String
  description String?
  priority    Priority @default(MEDIUM)
  completed   Boolean  @default(false)
  order       Int      @default(0)

  board    Board   @relation(fields: [boardId], references: [id])
  boardId  String  @db.ObjectId
  column   Column? @relation(fields: [columnId], references: [id])
  columnId String? @db.ObjectId

  @@map("task")
}

enum Priority {
  LOWEST
  LOW
  MEDIUM
  HIGH
  HIGHEST
}

enum EntityStatus {
  ACTIVE
  INACTIVE
  DELETED
}
